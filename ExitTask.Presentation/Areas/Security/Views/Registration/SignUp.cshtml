@using Resources
@model ExitTask.Presentation.Areas.Security.Models.UserRegistrationViewModel

@{
    this.ViewBag.Title = "SignUp";
    this.Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (this.Html.BeginForm("SignUp", "Registration", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @(this.Html.AntiForgeryToken())

    <div class="form-horizontal">

        @(this.Html.ValidationSummary(true, "", new { @class = "text-danger" }))
       
         <div class="form-group">
            @(this.Html.Label(Resource.FirstName, new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.Label(Resource.LastName, new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.Label(Resource.Email, new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.Label(Resource.EmailConfirmation, new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.EmailConfirmation, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.EmailConfirmation, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.Label(Resource.Password, new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.PasswordFor(model => model.Password, new { @class = "form-control" } ))
                @(this.Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.Label(Resource.PasswordConfirmation, new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.PasswordFor(model => model.PasswordConfirmation, new { @class = "form-control" }))
                @(this.Html.ValidationMessageFor(model => model.PasswordConfirmation, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.Label(Resource.Sex, new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EnumDropDownListFor(model => model.Sex, new { @class = "form-control" } ))
                @(this.Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @(this.Html.ActionLink("Back to List", "Index"))
</div>
