@model ExitTask.Presentation.Areas.Admin.Models.TourCreateViewModel

@{
    this.ViewBag.Title = "Create";
    this.Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (this.Html.BeginForm()) 
{
    @(this.Html.AntiForgeryToken())

    <div class="form-horizontal">
        <h4>TourCreateViewModel</h4>
        <hr />
        @(this.Html.ValidationSummary(true, "", new { @class = "text-danger" }))
        <div class="form-group">
            @(this.Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EnumDropDownListFor(model => model.Type, "Select an item" ,new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.NightNumber, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.NightNumber, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.NightNumber, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.PersonNumber, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.PersonNumber, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.PersonNumber, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Feeding, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EnumDropDownListFor(model => model.Feeding, "Select an item", new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Feeding, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EnumDropDownListFor(model => model.State, "Select an item", new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                <input type="file" id="Image" name="upload" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @(this.Html.ActionLink("Back to List", "Index"))
</div>
