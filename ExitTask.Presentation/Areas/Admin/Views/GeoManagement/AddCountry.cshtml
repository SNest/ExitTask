@using Resources
@model ExitTask.Presentation.Areas.Admin.Models.CountryViewModel

@{
    this.ViewBag.Title = "AddCountry";
    this.Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AddCountry</h2>

@using (this.Html.BeginForm()) 
{
    @(this.Html.AntiForgeryToken())

    <div class="form-horizontal">
        <h4>CountryViewModel</h4>
        <hr />
        @(this.Html.ValidationSummary(true, "", new { @class = "text-danger" }))
        <div class="form-group">
            @(this.Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @(this.Html.EnumDropDownListFor(model => model.Mainland, new { @class = "form-control floating-label", placeholder = Resource.Mainland }))
                @(this.Html.ValidationMessageFor(model => model.Mainland, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Capital, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Capital, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Capital, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Population, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Population, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Population, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Geography, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Geography, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Geography, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Climate, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Climate, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Climate, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Worship, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Worship, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Worship, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.PoliticalStructure, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.PoliticalStructure, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.PoliticalStructure, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.TimeZone, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.TimeZone, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.TimeZone, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            @(this.Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @(this.Html.EditorFor(model => model.Currency, new { htmlAttributes = new { @class = "form-control" } }))
                @(this.Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" }))
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @(this.Html.ActionLink("Back to List", "Index"))
</div>
