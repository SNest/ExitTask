@using ExitTask.Presentation.Helpers
@using Resources
@model IEnumerable<ExitTask.Presentation.Areas.Common.Models.TourViewModel>

@{
    this.ViewBag.Title = "Index";
    this.Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="tour-grid mdl-grid">
    <div class="tour-grid mdl-grid mdl-cell--1-col mdl-cell--12-col">
        <div class="filter-card mdl-card mdl-shadow--16dp mdl-cell mdl-cell--4-col mdl-color-text--white">
            <div class="mdl-card__media mdl-color-text--grey-50 mdl-color--grey-700">
                <h4>@Resource.Filtration</h4>
            </div>
            @using (this.Html.BeginForm("FiltrTours", "Home", null, FormMethod.Post, new { @class = "filtr-form" }))
            {
                @(this.Html.AntiForgeryToken())

                <div class="form-horizontal ">
                    <div class="form-group">
                        @(this.Html.Label(Resource.Type, new { @class = "control-label col-md-4" }))
                        <div class="col-md-4">
                            @(this.Html.EnumDropDownListFor(model => model.First().Type, new { @class = "form-control " }))
                            @(this.Html.ValidationMessageFor(model => model.First().Type, "", new { @class = "text-danger" }))
                        </div>
                    </div>

                    <div class="form-group">
                        @(this.Html.Label(Resource.Price, new { @class = "control-label col-md-4" }))
                        <div class="col-md-4">
                            @(this.Html.EditorFor(model => model.First().Price, new { htmlAttributes = new { @class = "form-control " }}))
                            @(this.Html.ValidationMessageFor(model => model.First().Price, "", new { @class = "text-danger" }))
                        </div>
                    </div>

                    <div class="form-group">
                        @(this.Html.Label(Resource.PersonNumber, new { @class = "control-label col-md-4" }))
                        <div class="col-md-4">
                            @(this.Html.EditorFor(model => model.First().PersonNumber,new { htmlAttributes = new { @class = "form-control " }}))
                            @(this.Html.ValidationMessageFor(model => model.First().Price, "", new { @class = "text-danger" }))
                        </div>
                    </div>

                    <div class="form-group">
                        @(this.Html.Label(Resource.Hotel, new { @class = "control-label col-md-4" }))
                        <div class="col-md-4">
                            @(this.Html.EnumDropDownListFor(model => model.First().Hotel.Type, new { @class = "form-control " }))
                            @(this.Html.ValidationMessageFor(model => model.First().Hotel.Type, "", new { @class = "text-danger" }))
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="@Resource.Filtr" class="btn btn-default" name="submit" />
                        </div>
                    </div>
                </div>
            }
        </div>

        @{
            int counter = 0;
        }
        @foreach (var item in this.Model)
        {
            @(this.Html.TourPreviewCard(item, counter))
            counter++;
        }
    </div>
</div>
